// Generated by Dagger (https://dagger.dev).
package dev.androidbroadcast.news.main;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import dev.androidbroadcast.news.data.ArticlesRepository;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GetAllArticlesUseCase_Factory implements Factory<GetAllArticlesUseCase> {
  private final Provider<ArticlesRepository> repositoryProvider;

  public GetAllArticlesUseCase_Factory(Provider<ArticlesRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetAllArticlesUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetAllArticlesUseCase_Factory create(
      Provider<ArticlesRepository> repositoryProvider) {
    return new GetAllArticlesUseCase_Factory(repositoryProvider);
  }

  public static GetAllArticlesUseCase newInstance(ArticlesRepository repository) {
    return new GetAllArticlesUseCase(repository);
  }
}
